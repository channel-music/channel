group 'kalouantonis.channel'
version '0.1-SNAPSHOT'

buildscript {
    ext {
        kotlinVersion = '1.1.2'
        springBootVersion = '2.0.0.M1'
    }

    repositories {
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        // For integration tests
        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.3.2'
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.unbroken-dome.test-sets'

repositories {
    jcenter()
    // Latest spring
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    // JAudioTagger
    maven { url "https://dl.bintray.com/ijabz/maven" }
}

jar {
    baseName = 'channel'
    version = version
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

testSets {
    integrationTest
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    // JSON
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.7"
    // Web
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-hateoas"
    // JPA & DB
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "com.h2database:h2:1.4.195"
    // Development
    compile "org.springframework.boot:spring-boot-devtools"
    // Parsing audio file metadata
    compile "net.jthink:jaudiotagger:2.2.3"
    // Testing
    testCompile "org.springframework.boot:spring-boot-starter-test"
    integrationTestCompile 'org.assertj:assertj-core:3.0.0'
}

check.dependsOn integrationTest   // run integration tests before check
integrationTest.mustRunAfter test // run unit tests before integration tests

// Output integration and unit test reports separately
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}
